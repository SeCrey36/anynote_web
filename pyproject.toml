[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
extend-select = [
    # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "W",
    "E",
    # https://docs.astral.sh/ruff/rules/#mccabe-c90
    "C90",
    # https://docs.astral.sh/ruff/rules/#isort-i
    "I",
    # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "N",
    # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D",
    # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "UP",
    # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "ANN",
    # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "S",
    # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "B",
    # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "A",
    # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "COM",
    # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "C4",
    # https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
    "DTZ",
    # https://docs.astral.sh/ruff/rules/#flake8-debugger-t10
    "T10",
    # https://docs.astral.sh/ruff/rules/#flake8-django-dj
    "DJ",
    # https://docs.astral.sh/ruff/rules/#flake8-print-t20
    "T20",
    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "PT",
    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "SIM",
    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "PTH",
    # https://docs.astral.sh/ruff/rules/#flake8-todos-td
    "TD",
    # https://docs.astral.sh/ruff/rules/#eradicate-era
#    "ERA",
    # https://docs.astral.sh/ruff/rules/#tryceratops-try
    "TRY",
    # https://docs.astral.sh/ruff/rules/#flynt-fly
    "FLY",
    # https://docs.astral.sh/ruff/rules/#perflint-perf
    "PERF",
    # https://docs.astral.sh/ruff/rules/#refurb-furb
    "FURB",
    # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "PIE",
    # https://docs.astral.sh/ruff/rules/#flake8-async-async
    "ASYNC",
    # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "RUF"
]
ignore = [
    # https://docs.astral.sh/ruff/rules/missing-type-self
    "ANN101",
    # https://docs.astral.sh/ruff/rules/missing-type-cls
    "ANN102",
    # https://docs.astral.sh/ruff/rules/missing-type-args
    "ANN002",
    # https://docs.astral.sh/ruff/rules/missing-type-kwargs
    "ANN003",
    # https://docs.astral.sh/ruff/rules/any-type
    "ANN401",
    # https://docs.astral.sh/ruff/rules/undocumented-public-module
    "D100",
    # https://docs.astral.sh/ruff/rules/undocumented-public-package
    "D104",
    # https://docs.astral.sh/ruff/rules/undocumented-magic-method
    "D105",
    # https://docs.astral.sh/ruff/rules/undocumented-public-nested-class
    "D106",
    # https://docs.astral.sh/ruff/rules/undocumented-public-init
    "D107",
    # https://docs.astral.sh/ruff/rules/one-blank-line-before-class
    "D203",
    # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line
    "D213",
    # https://docs.astral.sh/ruff/rules/dashed-underline-after-section
    "D407",
    # https://docs.astral.sh/ruff/rules/error-suffix-on-exception-name
    "N818",
    # https://docs.astral.sh/ruff/rules/mixed-case-variable-in-global-scope/
    "N816",
    # https://docs.astral.sh/ruff/rules/invalid-module-name
    "N999",
    # https://docs.astral.sh/ruff/rules/unnecessary-collection-call
    "C408",
    # https://docs.astral.sh/ruff/rules/mutable-class-default
    "RUF012",
    # https://docs.astral.sh/ruff/rules/raise-vanilla-args
    "TRY003",
    # https://docs.astral.sh/ruff/rules/try-consider-else
    "TRY300",
]
[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    # https://docs.astral.sh/ruff/rules/unused-import
    "F401",
]
"**/config/settings/**" = [
    # https://docs.astral.sh/ruff/rules/undefined-local-with-import-star
    "F403",
    # https://docs.astral.sh/ruff/rules/undefined-local-with-import-star-usage
    "F405",
    # https://docs.astral.sh/ruff/rules/line-too-long
    "E501",
]
"settings.py" = [
    # https://docs.astral.sh/ruff/rules/unused-import/
    "F401",
    # https://docs.astral.sh/ruff/rules/undefined-local-with-import-star
    "F403",
    # https://docs.astral.sh/ruff/rules/undefined-local-with-import-star-usage
    "F405",
    # https://docs.astral.sh/ruff/rules/line-too-long
    "E501",

]
"**/tests/*" = [
    # https://docs.astral.sh/ruff/rules/assert
    "S101",
    # https://docs.astral.sh/ruff/rules/hardcoded-password-func-arg
    "S106",
    # https://docs.astral.sh/ruff/rules/suspicious-non-cryptographic-random-usage
    "S311",
]
"**/test_*" = [
    # https://docs.astral.sh/ruff/rules/missing-return-type-undocumented-public-function
    "ANN201",
]
"**/migrations/*" = [
    # https://docs.astral.sh/ruff/rules/undocumented-public-class
    "D101",
    # https://docs.astral.sh/ruff/rules/line-too-long
    "E501",
]
"**/views**" = [
    # https://docs.astral.sh/ruff/rules/ANN201
    "ANN001",
    # https://docs.astral.sh/ruff/rules/ANN201
    "ANN201",
]
"**/admin**" = [
    # https://docs.astral.sh/ruff/rules/missing-type-function-argument
    "ANN001",
    # https://docs.astral.sh/ruff/rules/missing-return-type-undocumented-public-function
    "ANN201",
]
"**/api**" = [
    # https://docs.astral.sh/ruff/rules/missing-type-function-argument
    "ANN001",
    # https://docs.astral.sh/ruff/rules/missing-return-type-undocumented-public-function
    "ANN201",
    # https://docs.astral.sh/ruff/rules/missing-return-type-private-function
    "ANN202",
]
"**/open_api**" = [
    # https://docs.astral.sh/ruff/rules/missing-type-function-argument
    "ANN001",
    # https://docs.astral.sh/ruff/rules/missing-return-type-undocumented-public-function
    "ANN201",
]
"tasks.py" = [
    # https://docs.astral.sh/ruff/rules/hardcoded-password-func-arg
    "S106",
]
"**/apps.py" = [
    # https://docs.astral.sh/ruff/rules/undocumented-public-method
    "D102",
    "D101",
]

[tool.ruff.lint.isort]
force-wrap-aliases = true
split-on-trailing-comma = true
section-order = [
    "future",
    "standard-library",
    "django",
    "drf",
    "third-party",
    "first-party",
    "apps",
    "local-folder",
]
[tool.ruff.lint.isort.sections]
django = ["django"]
drf = ["rest_framework"]
apps = ["apps", "config", "libs"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
parametrize-names-type = "list"
parametrize-values-type = "list"
parametrize-values-row-type = "list"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
exclude = [
    # Disabling for admin since it's just configs and black/ruff format one item
    # tuples as one line
    "**/admin.py",
    "**/views.py",
    "**/admin/*",
    "**/views/*",
]

[tool.pytest.ini_options]
#DJANGO_SETTINGS_MODULE = "anynote.settings"

#pythonpath = "../anynote/"
#python_files = ["tests.py", "test_*.py", "*_tests.py"]

[tool.poetry]
name = "anynote_web"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1"
djangorestframework = "^3.15.2"
djangorestframework-simplejwt = "^5.3.1"
psycopg2 = "^2.9.9"
environs = "^11.0.0"
python-decouple = "^3.8"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.7"
coverage = "^7.6.1"
pytest = "^8.3.2"
pytest-django = "^4.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
